{"ast":null,"code":"var _jsxFileName = \"/Users/johntraut/code/Landan/landanReactSite/landansite/src/Components/Layout/Containers/Contentholder/Contentholder.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport classes from \"./Contentholder.module.css\";\nimport Aux from \"../../../HOC_AUX/Aux/Aux\";\nimport ProjectOverviewBox from \"../../../Display/ProjectOverview/ProjectOverviewBox\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContentHolder = props => {\n  _s();\n\n  let projectState = {\n    1: {\n      project: \"example1\",\n      date: \"4/20/20\",\n      section: \"Portfolio\",\n      subSec: \"PitchBook\"\n    },\n    2: {\n      project: \"example2\",\n      date: \"4/21/20\",\n      section: \"Portfolio\",\n      subSec: \"CaseStudy\"\n    },\n    3: {\n      project: \"example3\",\n      date: \"4/22/20\",\n      section: \"Portfolio\",\n      subSec: \"Illustrations\"\n    },\n    4: {\n      project: \"example1\",\n      date: \"4/20/20\",\n      section: \"Shop\",\n      subSec: \"Apparel\"\n    },\n    // 5: { project: \"example2\", date: \"4/21/20\" },\n    // 6: { project: \"example3\", date: \"4/22/20\" },\n    // 7: { project: \"example1\", date: \"4/20/20\" },\n    // 8: { project: \"example2\", date: \"4/21/20\" },\n    // 9: { project: \"example3\", date: \"4/22/20\" },\n    // 10: { project: \"example1\", date: \"4/20/20\" },\n    // 11: { project: \"example2\", date: \"4/21/20\" },\n    // 12: { project: \"example3\", date: \"4/22/20\" },\n    // 13: { project: \"example1\", date: \"4/20/20\" },\n    // 24: { project: \"example2\", date: \"4/21/20\" },\n    // 32: { project: \"example3\", date: \"4/22/20\" },\n    // 42: { project: \"example1\", date: \"4/20/20\" },\n    // 52: { project: \"example2\", date: \"4/21/20\" },\n    // 62: { project: \"example3\", date: \"4/22/20\" },\n    // 72: { project: \"example1\", date: \"4/20/20\" },\n    // 82: { project: \"example2\", date: \"4/21/20\" },\n    // 92: { project: \"example3\", date: \"4/22/20\" },\n    // 102: { project: \"example1\", date: \"4/20/20\" },\n    // 112: { project: \"example2\", date: \"4/21/20\" },\n    // 122: { project: \"example3\", date: \"4/22/20\" },\n    displayClicked: false\n  };\n  let stateCopy = { ...projectState\n  };\n\n  const clickHandler = event => {\n    console.log(event.target);\n  };\n\n  const contentDisplayHandler = header => {\n    if (header == \"home\") {\n      console.log(\"homeStatus\");\n      return Object.keys(stateCopy).map(currentValue => {\n        return /*#__PURE__*/_jsxDEV(ProjectOverviewBox, {\n          name: stateCopy[currentValue].project,\n          date: stateCopy[currentValue].date,\n          section: stateCopy[currentValue].section,\n          subSec: stateCopy[currentValue].subSec,\n          clickHandle: clickHandler\n        }, Math.random(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this);\n      });\n    } else if (header === \"portfolio\") {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Work\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 14\n      }, this);\n    }\n  };\n\n  const [currentHeader, changeHeader] = useState(props.storedHeader);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.ContentHolder,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.Header,\n        children: [\"Landan \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 18\n        }, this), \" Earley\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.blurb,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \", \"I am writing some words to fill the page to display text. Im hoping the words will wrap in a nice way When I type them out. and blah blah blah blahblah blahblah blah blah blah\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.ProjectsOverview,\n        children: contentDisplayHandler(currentHeader)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContentHolder, \"1Lyp40cMRLYLlxmV3JHjq7SsGb8=\");\n\n_c = ContentHolder;\nexport default ContentHolder;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContentHolder\");","map":{"version":3,"sources":["/Users/johntraut/code/Landan/landanReactSite/landansite/src/Components/Layout/Containers/Contentholder/Contentholder.js"],"names":["React","useState","classes","Aux","ProjectOverviewBox","ContentHolder","props","projectState","project","date","section","subSec","displayClicked","stateCopy","clickHandler","event","console","log","target","contentDisplayHandler","header","Object","keys","map","currentValue","Math","random","currentHeader","changeHeader","storedHeader","Header","blurb","ProjectsOverview"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport classes from \"./Contentholder.module.css\";\nimport Aux from \"../../../HOC_AUX/Aux/Aux\";\nimport ProjectOverviewBox from \"../../../Display/ProjectOverview/ProjectOverviewBox\";\n\nconst ContentHolder = (props) => {\n  let projectState = {\n    1: {\n      project: \"example1\",\n      date: \"4/20/20\",\n      section: \"Portfolio\",\n      subSec: \"PitchBook\",\n    },\n    2: {\n      project: \"example2\",\n      date: \"4/21/20\",\n      section: \"Portfolio\",\n      subSec: \"CaseStudy\",\n    },\n    3: {\n      project: \"example3\",\n      date: \"4/22/20\",\n      section: \"Portfolio\",\n      subSec: \"Illustrations\",\n    },\n    4: {\n      project: \"example1\",\n      date: \"4/20/20\",\n      section: \"Shop\",\n      subSec: \"Apparel\",\n    },\n    // 5: { project: \"example2\", date: \"4/21/20\" },\n    // 6: { project: \"example3\", date: \"4/22/20\" },\n    // 7: { project: \"example1\", date: \"4/20/20\" },\n    // 8: { project: \"example2\", date: \"4/21/20\" },\n    // 9: { project: \"example3\", date: \"4/22/20\" },\n    // 10: { project: \"example1\", date: \"4/20/20\" },\n    // 11: { project: \"example2\", date: \"4/21/20\" },\n    // 12: { project: \"example3\", date: \"4/22/20\" },\n    // 13: { project: \"example1\", date: \"4/20/20\" },\n    // 24: { project: \"example2\", date: \"4/21/20\" },\n    // 32: { project: \"example3\", date: \"4/22/20\" },\n    // 42: { project: \"example1\", date: \"4/20/20\" },\n    // 52: { project: \"example2\", date: \"4/21/20\" },\n    // 62: { project: \"example3\", date: \"4/22/20\" },\n    // 72: { project: \"example1\", date: \"4/20/20\" },\n    // 82: { project: \"example2\", date: \"4/21/20\" },\n    // 92: { project: \"example3\", date: \"4/22/20\" },\n    // 102: { project: \"example1\", date: \"4/20/20\" },\n    // 112: { project: \"example2\", date: \"4/21/20\" },\n    // 122: { project: \"example3\", date: \"4/22/20\" },\n    displayClicked: false,\n  };\n\n  let stateCopy = { ...projectState };\n\n  const clickHandler = (event) => {\n    console.log(event.target);\n  };\n\n  const contentDisplayHandler = (header) => {\n    if (header == \"home\") {\n      console.log(\"homeStatus\");\n      return Object.keys(stateCopy).map((currentValue) => {\n        return (\n          <ProjectOverviewBox\n            key={Math.random()}\n            name={stateCopy[currentValue].project}\n            date={stateCopy[currentValue].date}\n            section={stateCopy[currentValue].section}\n            subSec={stateCopy[currentValue].subSec}\n            clickHandle={clickHandler}\n          />\n        );\n      });\n    } else if (header === \"portfolio\") {\n      return <div>Work</div>;\n    }\n  };\n\n  const [currentHeader, changeHeader] = useState(props.storedHeader);\n\n  return (\n    <React.Fragment>\n      <div className={classes.ContentHolder}>\n        {/* Heading Name */}\n        <div className={classes.Header}>\n          Landan <br></br> Earley\n        </div>\n        {/* Heading Name End */}\n\n        {/* Blurb Start */}\n        <div className={classes.blurb}>\n          <p>\n            {\" \"}\n            I am writing some words to fill the page to display text. Im hoping\n            the words will wrap in a nice way When I type them out. and blah\n            blah blah blahblah blahblah blah blah blah\n          </p>\n        </div>\n        {/* Blurb End */}\n        <div className={classes.ProjectsOverview}>\n          {contentDisplayHandler(currentHeader)}\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\nexport default ContentHolder;\n"]},"metadata":{},"sourceType":"module"}